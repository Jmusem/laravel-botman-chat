{"ast":null,"code":"var _jsxFileName = \"C:\\\\laravel-botman-chat\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    if (visible && messages.length === 0) {\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          from: 'bot',\n          text: 'Hi, how can I help you today?'\n        }]);\n      }, 300);\n    }\n  }, [visible]);\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      if (userInput.trim().length < 2) {\n        setSuggestions([]);\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8000/autocomplete?query=${userInput}`);\n        setSuggestions(response.data.map(item => item.question)); // adjust depending on your model field\n      } catch (error) {\n        console.error('Autocomplete fetch failed', error);\n        setSuggestions([]);\n      }\n    };\n    fetchSuggestions();\n  }, [userInput]);\n  const sendMessage = async (text = userInput) => {\n    if (text.trim() === '') return;\n    const userMessage = {\n      from: 'user',\n      text\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setSuggestions([]);\n    try {\n      var _response$data$messag, _response$data$messag2;\n      const response = await axios.post('http://localhost:8000/botman', {\n        message: text\n      });\n      const botReply = ((_response$data$messag = response.data.messages) === null || _response$data$messag === void 0 ? void 0 : (_response$data$messag2 = _response$data$messag[0]) === null || _response$data$messag2 === void 0 ? void 0 : _response$data$messag2.text) || \"Something went wrong.\";\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: botReply\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: \"Oops! There was a problem. Try again.\"\n      }]);\n    }\n    setUserInput('');\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const quickOptions = ['Reset Password', 'Check Email', 'Check Order', 'Make Payment'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle\",\n      onClick: () => setVisible(!visible),\n      children: \"\\uD83D\\uDCAC Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.from}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-buttons\",\n        children: quickOptions.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(option),\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: suggestions.map((sug, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(sug),\n          children: sug\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"T5jrs95H2rt27vdmwYlw1AKqAMg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","visible","setVisible","suggestions","setSuggestions","length","setTimeout","prev","from","text","fetchSuggestions","trim","response","get","data","map","item","question","error","console","sendMessage","userMessage","_response$data$messag","_response$data$messag2","post","message","botReply","handleSuggestionClick","suggestion","quickOptions","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","option","i","type","placeholder","value","onChange","e","target","onKeyDown","key","sug","_c","$RefreshReg$"],"sources":["C:/laravel-botman-chat/src/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (visible && messages.length === 0) {\r\n      setTimeout(() => {\r\n        setMessages(prev => [...prev, { from: 'bot', text: 'Hi, how can I help you today?' }]);\r\n      }, 300);\r\n    }\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      if (userInput.trim().length < 2) {\r\n        setSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/autocomplete?query=${userInput}`);\r\n        setSuggestions(response.data.map(item => item.question)); // adjust depending on your model field\r\n      } catch (error) {\r\n        console.error('Autocomplete fetch failed', error);\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    fetchSuggestions();\r\n  }, [userInput]);\r\n\r\n  const sendMessage = async (text = userInput) => {\r\n    if (text.trim() === '') return;\r\n\r\n    const userMessage = { from: 'user', text };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setSuggestions([]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/botman', { message: text });\r\n      const botReply = response.data.messages?.[0]?.text || \"Something went wrong.\";\r\n      setMessages(prev => [...prev, { from: 'bot', text: botReply }]);\r\n    } catch (error) {\r\n      setMessages(prev => [...prev, { from: 'bot', text: \"Oops! There was a problem. Try again.\" }]);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    sendMessage(suggestion);\r\n  };\r\n\r\n  const quickOptions = ['Reset Password', 'Check Email', 'Check Order', 'Make Payment'];\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <button className=\"chat-toggle\" onClick={() => setVisible(!visible)}>\r\n        ðŸ’¬ Chat\r\n      </button>\r\n\r\n      {visible && (\r\n        <div className=\"chatbox\">\r\n          <div className=\"chat-messages\">\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`message ${msg.from}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"quick-buttons\">\r\n            {quickOptions.map((option, i) => (\r\n              <button key={i} onClick={() => sendMessage(option)}>{option}</button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"chat-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your message...\"\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n            />\r\n            <button onClick={() => sendMessage()}>Send</button>\r\n          </div>\r\n\r\n          {suggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {suggestions.map((sug, index) => (\r\n                <li key={index} onClick={() => handleSuggestionClick(sug)}>\r\n                  {sug}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}