{"ast":null,"code":"var _jsxFileName = \"C:\\\\laravel-botman-chat\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showWelcomePopup, setShowWelcomePopup] = useState(true);\n\n  // Hide welcome popup after a few seconds\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowWelcomePopup(false);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Show initial bot message when chat opens\n  useEffect(() => {\n    if (visible && messages.length === 0) {\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          from: 'bot',\n          text: '👋 Hi! How can I help you today?'\n        }]);\n      }, 300);\n    }\n  }, [visible]);\n\n  // Autocomplete suggestions\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      if (userInput.trim().length < 2) {\n        setSuggestions([]);\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8000/autocomplete?query=${userInput}`);\n        const questions = response.data.map(item => item.question || item);\n        setSuggestions(questions);\n      } catch (error) {\n        console.error('Autocomplete fetch failed', error);\n        setSuggestions([]);\n      }\n    };\n    fetchSuggestions();\n  }, [userInput]);\n  const sendMessage = async (text = userInput) => {\n    if (text.trim() === '') return;\n    const userMessage = {\n      from: 'user',\n      text\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setSuggestions([]);\n    try {\n      var _response$data$messag, _response$data$messag2;\n      const response = await axios.post('http://localhost:8000/botman', {\n        message: text\n      });\n      const botReply = ((_response$data$messag = response.data.messages) === null || _response$data$messag === void 0 ? void 0 : (_response$data$messag2 = _response$data$messag[0]) === null || _response$data$messag2 === void 0 ? void 0 : _response$data$messag2.text) || \"🤖 Sorry, I didn't get that.\";\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: botReply\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: \"⚠️ Oops! Something went wrong.\"\n      }]);\n    }\n    setUserInput('');\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const clearChat = () => {\n    setMessages([]);\n    setUserInput('');\n  };\n  const quickOptions = ['Reset Password', 'Check Email', 'Check Order', 'Make Payment'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-toggle\",\n        onClick: () => setVisible(!visible),\n        children: \"\\uD83D\\uDCAC Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), showWelcomePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"wave\",\n          children: \"\\uD83D\\uDC4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), \" Welcome! How can I help you?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [\"Virtual Assistant\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearChat,\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.from}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: suggestions.map((sug, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(sug),\n          children: sug\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-buttons\",\n        children: quickOptions.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(option),\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"yMLp42KUEHgZynv3SK4T8H5aExc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","visible","setVisible","suggestions","setSuggestions","showWelcomePopup","setShowWelcomePopup","timer","setTimeout","clearTimeout","length","prev","from","text","fetchSuggestions","trim","response","get","questions","data","map","item","question","error","console","sendMessage","userMessage","_response$data$messag","_response$data$messag2","post","message","botReply","handleSuggestionClick","suggestion","clearChat","quickOptions","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","sug","option","i","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/laravel-botman-chat/src/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [showWelcomePopup, setShowWelcomePopup] = useState(true);\r\n\r\n  // Hide welcome popup after a few seconds\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShowWelcomePopup(false);\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Show initial bot message when chat opens\r\n  useEffect(() => {\r\n    if (visible && messages.length === 0) {\r\n      setTimeout(() => {\r\n        setMessages(prev => [...prev, { from: 'bot', text: '👋 Hi! How can I help you today?' }]);\r\n      }, 300);\r\n    }\r\n  }, [visible]);\r\n\r\n  // Autocomplete suggestions\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      if (userInput.trim().length < 2) {\r\n        setSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/autocomplete?query=${userInput}`);\r\n        const questions = response.data.map(item => item.question || item);\r\n        setSuggestions(questions);\r\n      } catch (error) {\r\n        console.error('Autocomplete fetch failed', error);\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    fetchSuggestions();\r\n  }, [userInput]);\r\n\r\n  const sendMessage = async (text = userInput) => {\r\n    if (text.trim() === '') return;\r\n\r\n    const userMessage = { from: 'user', text };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setSuggestions([]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/botman', { message: text });\r\n      const botReply = response.data.messages?.[0]?.text || \"🤖 Sorry, I didn't get that.\";\r\n      setMessages(prev => [...prev, { from: 'bot', text: botReply }]);\r\n    } catch (error) {\r\n      setMessages(prev => [...prev, { from: 'bot', text: \"⚠️ Oops! Something went wrong.\" }]);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    sendMessage(suggestion);\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setMessages([]);\r\n    setUserInput('');\r\n  };\r\n\r\n  const quickOptions = ['Reset Password', 'Check Email', 'Check Order', 'Make Payment'];\r\n\r\n  return (\r\n    <div className=\"chatbot-wrapper\">\r\n      <div className=\"chat-icon-container\">\r\n        <button className=\"chat-toggle\" onClick={() => setVisible(!visible)}>\r\n          💬 Chat\r\n        </button>\r\n\r\n        {showWelcomePopup && (\r\n          <div className=\"welcome-popup\">\r\n            <span className=\"wave\">👋</span> Welcome! How can I help you?\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {visible && (\r\n        <div className=\"chatbox\">\r\n          <div className=\"chat-header\">\r\n            Virtual Assistant\r\n            <button className=\"clear-btn\" onClick={clearChat}>🗑️ Clear</button>\r\n          </div>\r\n\r\n          <div className=\"chat-messages\">\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`message ${msg.from}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {suggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {suggestions.map((sug, index) => (\r\n                <li key={index} onClick={() => handleSuggestionClick(sug)}>\r\n                  {sug}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n          <div className=\"quick-buttons\">\r\n            {quickOptions.map((option, i) => (\r\n              <button key={i} onClick={() => sendMessage(option)}>{option}</button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"chat-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your message...\"\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n            />\r\n            <button onClick={() => sendMessage()}>Send</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}