{"ast":null,"code":"var _jsxFileName = \"C:\\\\laravel-botman-chat\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const sendMessage = async () => {\n    if (userInput.trim() === '') return;\n    const userMessage = {\n      from: 'user',\n      text: userInput\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post('http://localhost:8000/botman', {\n        driver: 'web',\n        userId: '1234',\n        message: userInput\n      });\n      const botMessage = {\n        from: 'bot',\n        text: response.data.messages[0].text\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(error);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid black',\n        height: '300px',\n        overflowY: 'auto',\n        padding: '10px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.from === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.from, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 16\n          }, this), \" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && sendMessage(),\n      placeholder: \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"HfxAD2MO2c7ZhY4vijqw2/NvqkQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","sendMessage","trim","userMessage","from","text","response","post","driver","userId","message","botMessage","data","prev","error","console","children","style","border","height","overflowY","padding","map","msg","index","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/laravel-botman-chat/src/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    if (userInput.trim() === '') return;\r\n\r\n    const userMessage = { from: 'user', text: userInput };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/botman', {\r\n        driver: 'web',\r\n        userId: '1234',\r\n        message: userInput,\r\n      });\r\n\r\n      const botMessage = { from: 'bot', text: response.data.messages[0].text };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ border: '1px solid black', height: '300px', overflowY: 'auto', padding: '10px' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\r\n            <p><strong>{msg.from}:</strong> {msg.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n        placeholder=\"Type your message\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIF,SAAS,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE7B,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEN;IAAU,CAAC;IACrDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,WAAW,CAAC,CAAC;IAEvC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,8BAA8B,EAAE;QAChEC,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAEX;MACX,CAAC,CAAC;MAEF,MAAMY,UAAU,GAAG;QAAEP,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEC,QAAQ,CAACM,IAAI,CAACf,QAAQ,CAAC,CAAC,CAAC,CAACQ;MAAK,CAAC;MACxEP,WAAW,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;IAEAd,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAKuB,KAAK,EAAE;QAAEC,MAAM,EAAE,iBAAiB;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAL,QAAA,EAC5FnB,QAAQ,CAACyB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB9B,OAAA;QAAiBuB,KAAK,EAAE;UAAEQ,SAAS,EAAEF,GAAG,CAACnB,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG;QAAO,CAAE;QAAAY,QAAA,eAC5EtB,OAAA;UAAAsB,QAAA,gBAAGtB,OAAA;YAAAsB,QAAA,GAASO,GAAG,CAACnB,IAAI,EAAC,GAAC;UAAA;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACN,GAAG,CAAClB,IAAI;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADtCL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnC,OAAA;MACEoC,KAAK,EAAE/B,SAAU;MACjBgC,QAAQ,EAAGC,CAAC,IAAKhC,YAAY,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIlC,WAAW,CAAC,CAAE;MACrDmC,WAAW,EAAC;IAAmB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFnC,OAAA;MAAQ2C,OAAO,EAAEpC,WAAY;MAAAe,QAAA,EAAC;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACjC,EAAA,CA5CQD,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AA8ChB,eAAeA,OAAO;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}